#!/bin/bash
#PBS -N UAG_StrategyQA_Fixed
#PBS -l select=1:ncpus=4:ngpus=1:mem=32GB
#PBS -l walltime=12:00:00
#PBS -q v1_gpu72
#PBS -j oe

echo "=== UAG StrategyQA (Fixed) ==="
echo "Start time: $(date)"
echo "Working directory: $PWD"

# Environment variables
export HF_HOME=$HOME/.cache/huggingface
export TRANSFORMERS_CACHE=$HOME/.cache/huggingface
export PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True
export MKL_INTERFACE_LAYER=LP64

# Check GPU
echo "=== Check GPU ==="
nvidia-smi

# Activate conda environment
echo "=== Activate conda environment ==="
source $HOME/anaconda3/etc/profile.d/conda.sh
conda activate uag

# Change to working directory
cd $PWD

echo "=== Start UAG StrategyQA (Fixed) ==="
echo "Dataset: StrategyQA (2290 samples)"
echo "Model: Mistral-7B-Instruct-v0.3"
echo "Method: True UAG (Uncertainty-aware Adaptive Guidance)"
echo "Includes: Uncertainty computation, demo clustering, adaptive reasoning"
echo "Fixes: All import and data format issues"

# Run fixed UAG experiment
python -c "
import sys
import os
sys.path.append(os.getcwd())
os.chdir(os.getcwd())
from code.uag import UAGFixed
import argparse

# Set all required UAG parameters
args = argparse.Namespace()
args.task = 'StrategyQA'
args.data_path = 'StrategyQA.json'
args.record_path = 'results/StrategyQA_uag_results_fixed.jsonl'
args.demonstration_path = 'StrategyQA.json'
args.demonstration_number = 16
args.theta = 16
args.lambda1 = 0.5
args.lambda2 = 0.5
args.k = 8
args.temperature = 0.5
args.max_length = 8192
args.max_new_tokens = 2048
args.max_loop = 10
args.device = 'cuda'

print(f'Starting fixed UAG experiment...')
print(f'Task: {args.task}')
print(f'Data path: {args.data_path}')
print(f'Theta: {args.theta}')
print(f'Lambda1: {args.lambda1}, Lambda2: {args.lambda2}')
print(f'K: {args.k}')

uag = UAGFixed(args)
accuracy = uag.process()

print(f'\n=== Completed! ===')
print(f'StrategyQA UAG accuracy: {accuracy:.4f}')
print(f'Results saved to: {args.record_path}')
"

echo "=== UAG StrategyQA completed ==="
echo "End time: $(date)"
